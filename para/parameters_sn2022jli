----------------------------- parameters --------------------------------
! i,j,kmesh : 0=uniform mesh, 1=geometrical series/uniform costheta, 2=other mesh
! fmr_max   : Maximum levels of fixed mesh refinement
! fmr_lvl(i): Number of layers in a given FMR level
&gridcon  xi1s=0d0 xi1e=1d13 xi2s=0d0 xi2e=1d0 xi3s=0d0 xi3e=1d0
	  is=1 ie=600 js=1 je=32 ks=1 ke=256
	  imesh=2 jmesh=1 kmesh=0
	  x1min=1d11 x2min=0 x3min=0d0
	  fmr_max=5
 	  fmr_lvl(1)=5
          fmr_lvl(2)=5
	  fmr_lvl(3)=6
  	  fmr_lvl(4)=12
	  fmr_lvl(5)=10  /

! outstyle/endstyle : time=1, timestep=2
! tnlim : Upper limit for number of timesteps (only when outstyle=2)
! t_end : Upper limit for physical time (only when outstyle=1)
! dt_out : Interval for output time (only when outstyle=1)
! tn_out : Interval for output timesteps (only when outstyle=2)
! dt_unit : Give name of dt_unit (current options are 's','hr','d','yr')
! sigfig : How many significant figures in output values
! outres : Resolution of output grid (1 means output everything, 2 means every 2 grid points, etc)
! write_other_vel : Set to .true. if 2.5D
! write_shock : Output shock switch
! write_other_slice : Output an alternative slice for 3D
&out_con  outstyle=1 endstyle=1
          tnlim=100000 t_end=18000d0 dt_out=1.d2 tn_out=1
          dt_unit='min' sigfig=7 outres=1 output_ascii=.false.
	  write_other_vel =.false. write_shock =.true.
	  write_evo=.true. write_other_slice=.true. /

! eostype : 0='ideal gas', 1='ideal gas + radiation pressure'
! compswitch:0=uniform,1=spherical,2=advection(3=reaction?)
! muconst : mean molecular weight (if compswitch=0 or background)
! spn : number of species (>=3)
&eos_con eostype = 1 eoserr=1d-15 compswitch=2 muconst=0.62d0 spn=8 /

! crdnt : cartesian:0,cylindrical:1,spherical:2
! rktype: order of Runge-Kutta (1 is for Euler method)
! flux_limiter: 'modified_mc' or 'minmod' or 'flat'
&simucon  crdnt=2 courant=0.9d0 rktype=3 mag_on=.false.
          flux_limiter='modified_mc'
	  include_cooling = .false.
	  include_extforce = .true.
	  frame=1 /

! periodic:0, reflective:1, outgoing:2, free:3, linear:4, linear+outgoing:5, 
! Dirichlet:9(provide in dirichlet.f90)
! eq_sym : Set to .true. for equatorial symmetry
&bouncon  bc1is=1 bc1os=2 bc2is=1 bc2os=1 bc3is=0 bc3os=0
	  bc1iv=1 bc1ov=2 bc2iv=1 bc2ov=1 bc3iv=0 bc3ov=0 eq_sym=.true. /

! gravswitch:0=off,1=point source,2=MICCG,3=Hyperbolic
! grav_init_other: Start from user defined initial condition. Use MICCG method if set to false
! gbtype: 0=multipole expansion, 1=Robin boundary
&gravcon gravswitch=3 grverr=1d-5 cgerr=1d-5 HGfac=3d0 hgcfl=0.9d0 gbtype=1
	 grav_init_relax=.false. grav_init_other=.true. include_extgrv=.false.
	 gis=1 gie=1 gjs=1 gje=1 gks=1 gke=1 /

! include_sinks: switch for sink particles
! nsink: number of sink particles
!!! other quantities should be given in initial condition file
&sinkcon include_sinks=.true. nsink=2 include_accretion=.true. p_acc=0.3d0 /
