
### hormone-setup begin ###

## hormone-setup for bash ##
function hormone-setup {
  export FC=@FC@
  export OMP_NUM_THREADS=@OMP_NUM_THREADS@
  export OMP_PLACES=cores
  export OMP_PROC_BIND=close
  export OMP_STACKSIZE=512M
  ulimit -s unlimited
  echo "Activated HORMONE"
}
## end hormone-setup for bash ##
## hormone-setup for csh ##
alias hormone-setup \
      'setenv FC @FC@; \
       setenv OMP_NUM_THREADS @OMP_NUM_THREADS@; \
       setenv OMP_PLACES cores; \
       setenv OMP_PROC_BIND close; \
       setenv OMP_STACKSIZE 512M; \
       limit stacksize unlimited; \
       echo "Activated HORMONE (csh)"'
## end hormone-setup for csh ##

_setup_hormone_complete() {
    local cur prev words cword

    local PARADIR="../para"
    local TESTDIR="../tests"
    local simtypes=()
    local name

    shopt -s nullglob
    for f in "$PARADIR"/parameters_*; do
        bn=${f##*/parameters_}
        [ "$bn" = "base" ] && continue
        simtypes+=("$bn")
    done
    shopt -u nullglob

    local opts="continue ${simtypes[*]}"

    # First arg
    if [ $cword -eq 1 ]; then
        if [[ -z "$cur" && -n "${COMP_TYPE-}" && "$COMP_TYPE" -eq 63 ]]; then
            {
                echo "Restart simulation from the latest dump"
                echo "- continue"
                echo
                echo "Start simulation for one of the following simtypes"
                for name in "${simtypes[@]}"; do
                    echo "- $name"
                done
            } | less -R  # <-- paged output
            COMPREPLY=()
        else
            COMPREPLY=( $(compgen -W "$opts" -- "$cur") )
        fi
        return 0
    fi

    # Second arg: only "test"
    if [ $cword -eq 2 ]; then
        local chosen="${words[1]}"
        if [ -f "$TESTDIR/${chosen}.bin" ]; then
            if [ -z "$cur" ]; then
                echo "Type 'test' if you want to run a test simulation"
                COMPREPLY=()
                return 0
            fi
            if [[ "$cur" == t* ]] && [[ ! " ${words[*]} " =~ " test " ]]; then
                COMPREPLY=( $(compgen -W "test" -- "$cur") )
                return 0
            fi
        fi
        return 0
    fi
}

complete -F _setup_hormone_complete setup_hormone ./setup

### hormone-setup end ###