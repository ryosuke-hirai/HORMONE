name: Test suite

on:
  push:
    branches: [ master ]
    paths-ignore:
      - 'README.md'
  pull_request:
    paths-ignore:
      - 'README.md'

jobs:
  compile:
    strategy:
      fail-fast: false
      matrix:
        fc:
          - gfortran
          - ifort
        debug:
          - no
          - yes
        mpi:
          - no
          - yes
        exclude:
          - fc: ifort
            mpi: yes

    name: compile (fc=${{ matrix.fc }}, debug=${{ matrix.debug }}, MPI=${{ matrix.mpi }})

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - uses: ./.github/actions/setup-intel-oneapi
      if: matrix.fc == 'ifort'

    - name: Set up OpenMPI
      if: matrix.mpi == 'yes'
      run: sudo apt-get install -y openmpi-bin libopenmpi-dev

    - name: Compile
      working-directory: ./work
      run: make ${{ matrix.debug == 'yes' && 'debug' || '' }}
      env:
        FC: ${{ matrix.fc }}
        MPI: ${{ matrix.mpi }}

    - name: Save binary as artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.fc }}-debug_${{ matrix.debug }}-mpi_${{ matrix.mpi }}
        path: ./work/hormone

  test:
    needs: compile
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        fc:
          - gfortran
          - ifort
        debug:
          - no
          - yes
        mpi:
          - no
          - yes
        test:
          - sodshock_x
          - sodshock_y
          - sodshock_z
          - briowushock_x
          - briowushock_y
          - briowushock_z
          - orszagtang_xy
          - orszagtang_yz
          - orszagtang_xz
          - sedov_default
          - star_sph
          - iotest
        exclude:
          - fc: ifort
            mpi: yes
          # Temporary: exclude tests that are not yet implemented for MPI
          - mpi: yes
            test: briowushock_x
          - mpi: yes
            test: briowushock_y
          - mpi: yes
            test: briowushock_z
          - mpi: yes
            test: orszagtang_xy
          - mpi: yes
            test: orszagtang_yz
          - mpi: yes
            test: orszagtang_xz
          - mpi: yes
            test: sedov_default
          - mpi: yes
            test: star_sph

    name: test ${{ matrix.test }} (fc=${{ matrix.fc }}, debug=${{ matrix.debug }}, MPI=${{ matrix.mpi }})

    steps:
    - uses: actions/checkout@v4

    - uses: ./.github/actions/setup-intel-oneapi
      if: matrix.fc == 'ifort'

    - name: Set up OpenMPI
      if: matrix.mpi == 'yes'
      run: sudo apt-get install -y openmpi-bin libopenmpi-dev

    - name: Download binary
      uses: actions/download-artifact@v4
      with:
        name: ${{ matrix.fc }}-debug_${{ matrix.debug }}-mpi_${{ matrix.mpi }}
        path: ./work

    - name: Set executable permissions for binary
      run: chmod +x ./work/hormone

    - name: Update startfile
      working-directory: ./work
      run: sed -i "s/sodshock_x/${{ matrix.test }}/g" startfile

    - name: Remove "test" after test name if doing iotest
      if: matrix.test == 'iotest'
      working-directory: ./work
      run: sed -i "s/iotest test/iotest/g" startfile

    - name: Run test
      working-directory: ./work
      run: |
        if [[ "${{ matrix.mpi }}" == "yes" ]]; then
          mpirun -np 4 --oversubscribe ./hormone | tee output.txt
        else
          ./hormone | tee output.txt
        fi

    - name: Check results are identical (all tests except star_sph, iotest)
      if: matrix.test != 'star_sph' && matrix.test != 'iotest'
      run: |
        if grep -q "Identical!" ./work/output.txt; then
          echo "Test results identical"
        else
          echo "Test results differ"
          exit 1
        fi

  # Gather results into a dummy job that will fail if the previous job fails
  gather_results:
    if: always()
    needs:
    - test

    # This name matches the branch protection requirement
    name: test

    runs-on: ubuntu-latest

    steps:
    - name: Check all tests
      run: |
        if [[ "${{ needs.test.result }}" == "success" ]]; then
          echo "All tests succeeded"
        else
          echo "At least one test failed"
          exit 1
        fi
